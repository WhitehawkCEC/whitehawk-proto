syntax = "proto3";

package whitehawk.proto.internal.client_portal.custom_questionnaire.v1;

import "whitehawk/proto/custom_questionnaire/display_schema/v1/message.proto";
import "whitehawk/proto/custom_questionnaire/display_uischema/v1/message.proto";
import "whitehawk/proto/custom_questionnaire/v1/message.proto";
import "whitehawk/proto/ulid/v1/message.proto";
import "google/protobuf/empty.proto";

service Service {
  rpc Upload(UploadRequest) returns (UploadResponse);
  rpc Show(ShowRequest) returns (ShowResponse);
  rpc List(google.protobuf.Empty) returns (ListResponse);
  rpc GetDisplaySchema(google.protobuf.Empty) returns (GetDisplaySchemaResponse);
  rpc CreateDisplaySchema(CreateDisplaySchemaRequest) returns (CreateDisplaySchemaResponse);
  rpc GetDisplayUISchema(google.protobuf.Empty) returns (GetDisplayUISchemaResponse);
  rpc CreateDisplayUISchema(CreateDisplayUISchemaRequest) returns (CreateDisplayUISchemaResponse);
}

message UploadRequest {
  oneof request {
    MetaData metadata = 1;
    File file = 2;
  }
}

message MetaData {
  string name = 1;
  string type = 2;
}

message File {
  bytes content = 1;
}

enum Status {
  STATUS_UNSPECIFIED = 0;
  STATUS_PENDING = 1;
  STATUS_IN_PROGRESS = 2;
  STATUS_SUCCESS = 3;
  STATUS_FAILED = 4;
}

message UploadResponse {
  string name = 1;
  Status status = 2;
}

message ShowRequest {
  whitehawk.proto.ulid.v1.Ulid id = 1;
}

message ShowResponse {
  whitehawk.proto.custom_questionnaire.v1.CustomQuestionnaire questionnaire = 1;
}

message ListResponse {
  repeated whitehawk.proto.custom_questionnaire.v1.CustomQuestionnaire questionnaire = 1;
}

message GetDisplaySchemaResponse {
  whitehawk.proto.custom_questionnaire.display_schema.v1.CustomQuestionnaireDisplaySchema display_schema = 1;
}

message CreateDisplaySchemaRequest {
  string display_schema = 1;
}

message CreateDisplaySchemaResponse {}

message GetDisplayUISchemaResponse {
  whitehawk.proto.custom_questionnaire.display_uischema.v1.CustomQuestionnaireDisplayUISchema display_uischema = 1;
}

message CreateDisplayUISchemaRequest {
  string display_uischema = 1;
}

message CreateDisplayUISchemaResponse {}
